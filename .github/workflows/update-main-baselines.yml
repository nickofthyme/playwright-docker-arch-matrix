name: Update all Visual Regression Baselines

# This action does the following
# - Runs playwright tests in update mode
# - Stores new screenshots in a unique directory by runner (i.e. runnerScreenshots)
# - Updates target baselines from selected runner/type

on:
  workflow_dispatch:
    inputs:
      # Update baselines screenshots from target runner
      runnerTarget:
        description: "Runner target"
        default: ubuntu-24.04
        type: choice
        options:
          - ubuntu-24.04
          - windows-2025
          - ubuntu-24.04-arm
          - macos-13
          - macos-15
      # Update baselines using docker or non-docker
      runnerTargetType:
        description: "Runner target type"
        default: docker
        type: choice
        options:
          - docker
          - host
      updateMode:
        description: "Update Mode"
        required: true
        default: all
        type: choice
        options:
          - all
          - changed
          - missing
      runHostTests:
        description: "Run non-docker tests"
        default: false
        type: boolean
      platformAgnostic:
        description: "Run tests agnostic of platform"
        default: true
        type: boolean

env:
  CI: true
  NODE_VERSION: lts/*
  RUNNER_TARGET: ${{ inputs.runnerTarget }}
  PLATFORM_AGNOSTIC: ${{ inputs.platformAgnostic }}

jobs:
  test:
    name: 'Screenshot testing - ${{ matrix.runner }} - ${{ matrix.project.name }}'
    if: ${{ inputs.runHostTests || inputs.runnerTargetType != 'docker' }}
    timeout-minutes: 15
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: write
    env:
      RUNNER: ${{ matrix.runner }} # adds test tag
    strategy:
      fail-fast: false
      matrix:
        project:
          - name: Chromium
            browser: chromium
          - name: Firefox
            browser: firefox
          - name: Webkit
            browser: webkit
        runner: [ ubuntu-24.04 ]
        # runner: [ ubuntu-24.04, windows-2025, ubuntu-24.04-arm, macos-13, macos-15 ]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Dump github context
      env:
        JSON_DUMP: ${{ toJson(github) }}
      run: echo "$JSON_DUMP"
    - name: Dump job context
      env:
        JSON_DUMP: ${{ toJson(job) }}
      run: echo "$JSON_DUMP"
    - name: Dump runner context
      env:
        JSON_DUMP: ${{ toJson(runner) }}
      run: echo "$JSON_DUMP"
    - name: Dump strategy context
      env:
        JSON_DUMP: ${{ toJson(strategy) }}
      run: echo "$JSON_DUMP"
    - name: Print environment variables
      run: printenv

    - name: Install main dependencies
      run: npm ci --ignore-scripts
    - name: Install react-app dependencies
      working-directory: demo-sites/simple-react-app
      run: npm ci
    - name: Install Playwright Browser (${{ matrix.project.browser }})
      run: npm run playwright:install -- ${{ matrix.project.browser }}
    - name: Run Playwright tests
      run: npm test -- --project=${{ matrix.project.browser }} --update-snapshots=${{ inputs.updateMode }}

    - name: Upload blob report to GitHub Actions Artifacts
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: blob-report-${{ matrix.runner }}-${{ matrix.project.browser }}
        path: e2e/reports/blob-report-*.zip
        retention-days: 1

  test-docker:
    name: 'Screenshot testing - Docker - ${{ matrix.runner }} - ${{ matrix.project }}'
    needs: test
    timeout-minutes: 15
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: write
    env:
      DOCKER: true # adds test tag
      RUNNER: ${{ matrix.runner }} # adds test tag
      JOB_INDEX: ${{ strategy.job-index }} # to name blob report
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        project: [ Chromium ]
        # project: [ Chromium, Firefox, Webkit ]
        runner: [ ubuntu-24.04 ]
        # runner: [ ubuntu-24.04, windows-2025, ubuntu-24.04-arm, macos-13, macos-15 ]
    container:
      image: mcr.microsoft.com/playwright:v1.51.1-noble
      options: --user 1001 # set user to pwuser, needed for firebase
    steps:
    - name: Checkout pull request
      uses: actions/checkout@v4
      if: ${{ github.event_name == 'pull_request' }}
    - name: Checkout branch # Need to checkout ref to use git
      uses: actions/checkout@v4
      if: ${{ github.event_name == 'workflow_dispatch' }}
      with:
        ref: ${{ github.ref }}
        repository: ${{ github.event.repository.full_name }}
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Dump github context
      env:
        JSON_DUMP: ${{ toJson(github) }}
      run: echo "$JSON_DUMP"
    - name: Dump job context
      env:
        JSON_DUMP: ${{ toJson(job) }}
      run: echo "$JSON_DUMP"
    - name: Dump runner context
      env:
        JSON_DUMP: ${{ toJson(runner) }}
      run: echo "$JSON_DUMP"
    - name: Dump strategy context
      env:
        JSON_DUMP: ${{ toJson(strategy) }}
      run: echo "$JSON_DUMP"
    - name: Print environment variables
      run: printenv

    - name: Install main dependencies
      run: npm ci --ignore-scripts
    - name: Install react-app dependencies
      working-directory: demo-sites/simple-react-app
      run: npm ci
    - name: Run Playwright tests
      run: npm test -- --project=${{ matrix.project }} --update-snapshots=${{ inputs.updateMode }}

    - name: Upload blob report to GitHub Actions Artifacts
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: blob-report-docker-${{ matrix.runner }}-${{ matrix.project }}
        path: e2e/reports/blob-report-*.zip
        retention-days: 1
    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v20
      id: verify-changed-files
      with:
        files: |
          e2e/screenshots/**/*.png
    - name: Commit and Push updated screenshots to ${{ github.ref_name }}
      if: ${{ steps.verify-changed-files.outputs.files_changed == 'true' && inputs.runnerTarget == matrix.runner }}
      uses: EndBug/add-and-commit@v9
      with:
        message: Update Playwright screenshots - Docker - ${{ matrix.runner }}
        add: e2e/screenshots/**/*.png
        default_author: github_actions

