name: Playwright Visual Regression Tests

on:
  pull_request:
    branches: [ main ]

  workflow_dispatch:
    inputs:
      runnerTarget:
        description: "Runner target"
        required: false
        default: " "
        type: choice
        options:
          - " "
          - ubuntu-24.04
          - windows-2025
          - ubuntu-24.04-arm
          - macos-13
          - macos-15
      updateMode:
        description: "Update Mode"
        required: false
        default: none
        type: choice
        options:
          - all
          - changed
          - missing
          - none

permissions:
  contents: write

env:
  CI: true
  NODE_VERSION: lts/*

jobs:
  test:
    name: 'Screenshot testing - ${{ matrix.runner }} - ${{ matrix.project.name }}'
    timeout-minutes: 60
    if: ${{ false }}
    runs-on: ${{ matrix.runner }}
    env:
      RUNNER: ${{ matrix.runner }} # adds test tag
    strategy:
      fail-fast: false
      matrix:
        project:
          - name: Chromium
            browser: chromium
        # project: [ Chromium, Firefox, Webkit ]
        runner: [ ubuntu-24.04-arm ]
        # runner: [ ubuntu-24.04, windows-2025, ubuntu-24.04-arm, macos-13, macos-15 ]
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Dump github context
      env:
        JSON_DUMP: ${{ toJson(github) }}
      run: echo "$JSON_DUMP"
    - name: Dump job context
      env:
        JSON_DUMP: ${{ toJson(job) }}
      run: echo "$JSON_DUMP"
    - name: Dump runner context
      env:
        JSON_DUMP: ${{ toJson(runner) }}
      run: echo "$JSON_DUMP"
    - name: Dump strategy context
      env:
        JSON_DUMP: ${{ toJson(strategy) }}
      run: echo "$JSON_DUMP"
    - name: Print environment variables
      run: printenv

    - name: Install main dependencies
      run: npm ci
    - name: Install react-app dependencies
      working-directory: demo-sites/simple-react-app
      run: npm ci
    - name: Install Playwright Browser (${{ matrix.project.browser }})
      run: npm run playwright:install -- ${{ matrix.project.browser }}
    - name: Run Playwright tests
      run: npm test -- --project=${{ matrix.project.browser }} --update-snapshots=${{ inputs.updateMode }}

    - name: Upload blob report to GitHub Actions Artifacts
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: blob-report-${{ matrix.runner }}-${{ matrix.project.browser }}
        path: e2e/reports/blob-report-*.zip
        retention-days: 1

  test-docker:
    name: 'Screenshot testing - Docker - ${{ matrix.runner }} - ${{ matrix.project }}'
    timeout-minutes: 60
    # if: ${{ false }}
    runs-on: ${{ matrix.runner }}
    env:
      DOCKER: true # adds test tag
      RUNNER: ${{ matrix.runner }} # adds test tag
      JOB_INDEX: ${{ strategy.job-index }} # to name blob report
    strategy:
      fail-fast: false
      matrix:
        project: [ Chromium ]
        # project: [ Chromium, Firefox, Webkit ]
        runner: [ ubuntu-24.04 ]
        # runner: [ ubuntu-24.04, windows-2025, ubuntu-24.04-arm, macos-13, macos-15 ]
    container:
      image: mcr.microsoft.com/playwright:v1.51.1-noble
      options: --user 1001 # set user to pwuser, needed for firebase
    steps:
    - name: Checkout pull request
      uses: actions/checkout@v4
      if: ${{ github.event_name == 'pull_request' }}
    - name: Checkout branch # Need to checkout ref to use git
      uses: actions/checkout@v4
      if: ${{ github.event_name == 'workflow_dispatch' }}
      with:
        ref: ${{ github.ref }}
        repository: ${{ github.event.repository.full_name }}
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Dump github context
      env:
        JSON_DUMP: ${{ toJson(github) }}
      run: echo "$JSON_DUMP"
    - name: Dump job context
      env:
        JSON_DUMP: ${{ toJson(job) }}
      run: echo "$JSON_DUMP"
    - name: Dump runner context
      env:
        JSON_DUMP: ${{ toJson(runner) }}
      run: echo "$JSON_DUMP"
    - name: Dump strategy context
      env:
        JSON_DUMP: ${{ toJson(strategy) }}
      run: echo "$JSON_DUMP"
    - name: Print environment variables
      run: printenv

    - name: Install main dependencies
      run: npm ci
    - name: Install react-app dependencies
      working-directory: demo-sites/simple-react-app
      run: npm ci
    - name: Run Playwright tests
      run: npm test -- --project=${{ matrix.project }} --update-snapshots=${{ inputs.updateMode }}

    - name: Upload blob report to GitHub Actions Artifacts
      if: ${{ !cancelled() }}
      uses: actions/upload-artifact@v4
      with:
        name: blob-report-docker-${{ matrix.runner }}-${{ matrix.project }}
        path: e2e/reports/blob-report-*.zip
        retention-days: 1
    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v20
      id: verify-changed-files
      with:
        files: |
          e2e/screenshots/**/*.png
    - name: Commit and Push updated screenshots to ${{ github.ref_name }}
      if: ${{ steps.verify-changed-files.outputs.files_changed == 'true' && inputs.runnerTarget == matrix.runner }}
      uses: EndBug/add-and-commit@v9
      with:
        message: Update Playwright screenshots - Docker - ${{ matrix.runner }}
        add: e2e/screenshots/**/*.png
        default_author: github_actions

  merge-reports:
    if: ${{ !cancelled() }}
    needs: [ test, test-docker ]
    runs-on: ubuntu-latest
    name: Merge all playwright reports
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    - name: Install dependencies
      run: npm ci

    - name: Download all blob reports
      uses: actions/download-artifact@v4
      with:
        path: all-blob-reports
        pattern: blob-report-*
        merge-multiple: true
    - name: "List directories is /all-blob-reports"
      run: ls ./all-blob-reports
    - name: Merge HTML Reports
      run: npm run playwright -- merge-reports --config=./e2e/report-merge.config.ts ./all-blob-reports
    - name: Upload Merged HTML report
      uses: actions/upload-artifact@v4
      with:
        name: html-report
        path: playwright-report

  upload-report:
    if: ${{ !cancelled() }}
    needs: [ merge-reports ]
    runs-on: ubuntu-latest
    name: Deploy playwright report
    steps:
    - name: Checkout gh-pages branch
      uses: actions/checkout@v4
      with:
        ref: refs/heads/gh-pages
        repository: ${{ github.event.repository.full_name }}
    - name: Setup values based on event
      id: setup
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          MSG="Update html report (PR#${{ github.event.pull_request.number }})"
          DEST="pr/${{ github.event.pull_request.number }}"
        else
          MSG="Update html report (${{ github.ref_name }})"
          DEST="${{ github.ref_name }}"
        fi

        echo "msg=$MSG" >> $GITHUB_OUTPUT
        echo "dest=$DEST" >> $GITHUB_OUTPUT
      shell: bash {0}

    - name: Download html report
      uses: actions/download-artifact@v4
      with:
        pattern: html-report
    - run: rm -fr ${{ steps.setup.outputs.dest }}
    - run: mkdir -p ${{ steps.setup.outputs.dest }}
    - run: ls
    - run: ls html-report
    - name: Move file
      run: mv html-report ${{ steps.setup.outputs.dest }}
    - run: ls
    - run: ls ${{ github.ref_name }}
    - name: ${{ steps.setup.outputs.msg }}
      uses: EndBug/add-and-commit@v9
      with:
        message: ${{ steps.setup.outputs.msg }}
        add: ${{ steps.setup.outputs.dest }}
        default_author: github_actions

    - name: Post comment on pull request
      uses: actions/github-script@v7
      if: ${{ github.event_name == 'pull_request' }}
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `
              ## Test run complete!

              Available assets:
              - Playwright report - [link](https://nickofthyme.github.io/playwright-docker-arch-matrix/${{ steps.setup.outputs.dest }}/index.html)
            `
          })
